#atividade 1

create database company_1;
use company_1;

create TABLE product_lines (
  id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  text_description TEXT NOT NULL,
  html_description VARCHAR(250) NOT NULL,
  image TEXT(300) NOT NULL,
  UNIQUE (image(300))
);

create TABLE payments (
  id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  customer_number BIGINT NOT NULL,
  check_number BIGINT NOT NULL UNIQUE,
  payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  amount DECIMAL(10,2) NOT NULL,
  FOREIGN KEY (customer_number) REFERENCES customers(customer_number)
);

create TABLE offices (
  id BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
  phone VARCHAR(14) NOT NULL,
  address_line_1 VARCHAR(150) NOT NULL,
  address_line_2 VARCHAR(150),
  city VARCHAR(100) NOT NULL,
  state VARCHAR(100) NOT NULL,
  country VARCHAR(100) NOT NULL,
  postal_code VARCHAR(10) NOT NULL,
  territory VARCHAR(150)
);

CREATE TABLE employees (
  id BIGINT AUTO_INCREMENT NOT NULL PRIMARY KEY,
  last_name VARCHAR(50) NOT NULL,
  first_name VARCHAR(50) NOT NULL,
  extension VARCHAR(150) NOT NULL,
  email VARCHAR(100) NOT NULL,
  office_id BIGINT NOT NULL,
  reports_to BIGINT,
  job_title VARCHAR(50) NOT NULL,
  FOREIGN KEY (office_id) REFERENCES offices(id),
  CONSTRAINT fk_reports_to FOREIGN KEY (reports_to) REFERENCES employees(id)
);

CREATE TABLE products (
  id BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  product_name VARCHAR(150) NOT NULL,
  product_line_id BIGINT NOT NULL,
  product_scale VARCHAR(150) NOT NULL,
  product_vendor VARCHAR(100) NOT NULL,
  product_description TEXT NOT NULL,
  quantity_in_stock BIGINT NOT NULL,
  buy_price DECIMAL(10,2) NOT NULL,
  msrp VARCHAR(150),
  FOREIGN KEY (product_line_id) REFERENCES product_lines(id)
);

CREATE TABLE order_details (
  id BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  order_number BIGINT NOT NULL,
  product_id BIGINT NOT NULL,
  quantity_ordered BIGINT NOT NULL,
  price_each DECIMAL(10,2) NOT NULL,
  order_line_number BIGINT NOT NULL,
  FOREIGN KEY (order_number) REFERENCES orders(order_number),
  FOREIGN KEY (product_id) REFERENCES products(id)
);

CREATE TABLE orders (
  order_number BIGINT PRIMARY KEY,
  order_date DATE NOT NULL,
  required_date DATE NOT NULL,
  shipped_date DATE,
  status TEXT NOT NULL,
  comments TEXT,
  customer_number BIGINT,
  FOREIGN KEY (customer_number) REFERENCES customers(customer_number)
);

CREATE TABLE customers (
  customer_number BIGINT NOT NULL PRIMARY KEY,
  customer_name VARCHAR(150) NOT NULL,
  contact_last_name VARCHAR(150) NOT NULL,
  contact_first_name VARCHAR(150) NOT NULL,
  phone VARCHAR(20) NOT NULL,
  address_line_1 VARCHAR(50) NOT NULL,
  address_line_2 VARCHAR(150),
  city VARCHAR(50) NOT NULL,
  state VARCHAR(100) NOT NULL,
  postal_code VARCHAR(10) NOT NULL,
  country VARCHAR(50),
  sales_rep_employee_number BIGINT,
  credit_limit DECIMAL(10,2),
  FOREIGN KEY (sales_rep_employee_number) REFERENCES employees(id)
);

#atividade 2

create database company

create table funcionarios (
    id bigint primary key auto_increment,
    nome varchar(100) not null,
    cpf varchar(14)  not null,
    genero ENUM('M', 'F') not null,
    data_nascimento date not null,
    data_contratacao date not null
);

CREATE TABLE cargos(
    id bigint not null auto_increment,
    nome varchar (100) not null
);

CREATE TABLE historico_cargos (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    id_funcionario BIGINT NOT NULL,
    id_cargo BIGINT NOT NULL,
    data_inicio DATE NOT NULL,
    data_fim DATE,
    FOREIGN KEY (id_funcionario) REFERENCES funcionarios(id),
    FOREIGN KEY (id_cargo) REFERENCES cargos(id)
);

CREATE TABLE salarios (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    id_funcionario BIGINT NOT NULL,
    valor BIGINT (10, 2) NOT NULL,
    data_inicio DATE NOT NULL,
    data_fim DATE,
    FOREIGN KEY (id_funcionario) REFERENCES funcionarios(id)
);

CREATE TABLE departamentos (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(100) NOT NULL
);

CREATE TABLE historico_departamentos (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    id_funcionario BIGINT NOT NULL,
    id_departamento BIGINT NOT NULL,
    data_inicio DATE NOT NULL,
    data_fim DATE,
    FOREIGN KEY (id_funcionario) REFERENCES funcionarios(id),
    FOREIGN KEY (id_departamento) REFERENCES departamentos(id)
);

CREATE TABLE gerentes_departamentos (
    id INT PRIMARY KEY AUTO_INCREMENT,
    id_departamento BIGINT NOT NULL,
    id_funcionario BIGINT NOT NULL,
    data_inicio DATE NOT NULL,
    data_fim DATE,
    FOREIGN KEY (id_departamento) REFERENCES departamentos(id),
    FOREIGN KEY (id_funcionario) REFERENCES funcionarios(id)
);

INSERT INTO funcionarios (nome, cpf, genero, data_nascimento, data_contratacao) VALUES 
('Jo√£o', '111.111.111-11', 'M', '1980-01-01', '2000-01-01'),
('Maria', '222.222.222-22', 'F', '1985-01-01', '2005-01-01'),
('Pedro', '333.333.333-33', 'M', '1990-01-01', '2010-01-01');


INSERT INTO cargos (nome) VALUES 
('Analista de Sistemas'),
('Desenvolvedor'),
('Gerente de Projetos'),
('Coordenador');


INSERT INTO historico_cargos (id_funcionario, id_cargo, data_inicio, data_fim) VALUES 
(1, 1, '2000-01-01', '2005-01-01'),
(1, 2, '2005-01-01', '2010-01-01'),
(1, 3, '2010-01-01', NULL),
(2, 1, '2005-01-01', '2010-01-01'),
(2, 2, '2010-01-01', NULL),
(3, 4, '2010-01-01', NULL);

INSERT INTO salarios (id_funcionario, valor, data_inicio, data_fim) VALUES 
(1, 6000)


#atividade 3

CREATE DATABASE provedor_email;
USE provedor_email;

CREATE TABLE usuario (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(50) NOT NULL,
    email VARCHAR(50) NOT NULL UNIQUE,
    senha VARCHAR(50) NOT NULL
);

CREATE TABLE email (
    id INT PRIMARY KEY AUTO_INCREMENT,
    assunto VARCHAR(50) NOT NULL,
    corpo TEXT,
    data_envio DATETIME,
    status ENUM('rascunho', 'enviando', 'enviado') DEFAULT 'rascunho',
    remetente_id INT NOT NULL,
    FOREIGN KEY (remetente_id) REFERENCES usuario(id)
);

CREATE TABLE destinatario (
    id INT PRIMARY KEY AUTO_INCREMENT,
    email_id INT NOT NULL,
    destinatario_id INT NOT NULL,
    FOREIGN KEY (email_id) REFERENCES email(id),
    FOREIGN KEY (destinatario_id) REFERENCES usuario(id)
);

CREATE TABLE anexo (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome_arquivo VARCHAR(50) NOT NULL,
    tamanho INT NOT NULL,
    link VARCHAR(100) NOT NULL,
    email_id INT NOT NULL,
    FOREIGN KEY (email_id) REFERENCES email(id)
);
